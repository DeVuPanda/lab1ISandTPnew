@model IEnumerable<ArchivenewDomain.Model.Date>

@{
    ViewData["Title"] = "Index";
}

<h2>Main page</h2>

<p>
    <a asp-action="Create" class="btn btn-success">Add new article</a>
</p>

<div>
    <h3>Оберіть Excel-файл для завантаження в Data</h3>
    @using (Html.BeginForm("Export", "Dates", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm-excel" }))
    {
        <div>
            Завантажте Excel-файл:
            <input type="file" name="fileExcel" id="fileExcel" accept=".xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" title=" Choose the file"/>
            <div>
                <input type="submit" class="btn btn-success" value="Export file" />
            </div>
            <div style="color: red;">Якщо ваш файл Excel містить вже існуючі статті, вони не будуть завантажені до архіву.</div>
        </div>
    }
</div>
<div>
    <h3>Завантаження інформації в файл</h3>
    <a asp-action="Import" class="btn btn-success">Import file</a>
</div>

<style>
    .table-custom {
        width: 100%;
        max-width: 100%;
        margin-bottom: 1rem;
        background-color: transparent;
    }

        .table-custom th, .table-custom td {
            padding: 0.5rem;
            vertical-align: top;
            border-top: 1px solid #dee2e6;
            text-align: left;
        }

        .table-custom thead th {
            vertical-align: bottom;
            border-bottom: 2px solid #dee2e6;
        }

    .btn-sm-custom {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        line-height: 1.5;
        border-radius: 0.2rem;
        width: 60px; 
        margin-right: 5px; 
    }
</style>

<table class="table-custom">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Faculty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Format)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExtentOfMaterial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date1)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Faculty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Format)
                </td>
                <td>
                    @if (item.ExtentOfMaterial != null)
                    {
                        @Html.DisplayFor(modelItem => item.ExtentOfMaterial)
                        <text> сторінок</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date1)
                </td>
                <td>
                    <a href="@Url.Action("Edit", new { id = item.DateId })" class="btn btn-primary btn-sm-custom">Edit</a>
                    <form asp-action="Delete" asp-route-id="@item.DateId" method="post" style="display: inline;">
                        <button type="submit" class="btn btn-danger btn-sm-custom" onclick="return confirm('Are you sure you want to delete this?')">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>


<div id="chart_div"></div>
<div id="department_chart_div"></div>

@section scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart'] });

        google.charts.setOnLoadCallback(function () {
            drawChart();
            drawDepartmentChart();
        });

        function drawChart() {
            fetch('/api/chart/FacultyData')
                .then(response => response.json())
                .then(facultyData => {
                    var data = new google.visualization.DataTable();
                    data.addColumn('string', 'Faculty');
                    data.addColumn('number', 'Entries');
                    facultyData.forEach(function (row) {
                        data.addRow(row);
                    });


                    var colors = [
                        '#3366CC', '#DC3912', '#FF9900', '#109618', '#990099',
                        '#3B3EAC', '#0099C6', '#DD4477', '#66AA00', '#B82E2E',
                        '#316395', '#994499', '#22AA99', '#AAAA11', '#6633CC',
                        '#E67300', '#8B0707', '#329262', '#5574A6', '#3B3EAC'
                    ];

                    var options = {
                        title: 'The Faculties diagram:',
                        titleTextStyle: {
                            fontSize: 20,
                            bold: true
                        },
                        pieHole: 0.4,
                        colors: colors,
                        legend: {
                            position: 'right',
                            alignment: 'center',
                            textStyle: {
                                color: 'black',
                                fontSize: 18
                            },
                            scrollArrows: 'none'
                        },
                        chartArea: {
                            left: 10,
                            top: 30,
                            width: '100%',
                            height: '80%'
                        },
                        height: 600,
                    };

                    var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
                    chart.draw(data, options);
                })
                .catch(error => {
                    console.error('Error fetching faculty data:', error);
                });
        }

        function drawDepartmentChart() {
            fetch('/api/chart1/DepartmentData')
                .then(response => response.json())
                .then(departmentData => {
                    var data = new google.visualization.DataTable();
                    data.addColumn('string', 'Department');
                    data.addColumn('number', 'Entries');
                    departmentData.forEach(function (row) {
                        data.addRow(row);
                    });

                    var colors = [
                        '#3366CC', '#DC3912', '#FF9900', '#109618', '#990099',
                        '#3B3EAC', '#0099C6', '#DD4477', '#66AA00', '#B82E2E',
                        '#316395', '#994499', '#22AA99', '#AAAA11', '#6633CC',
                        '#E67300', '#8B0707', '#329262', '#5574A6', '#3B3EAC'
                    ];

                    var options = {
                        title: 'The Departments diagram:',
                        titleTextStyle: {
                            fontSize: 20,
                            bold: true
                        },
                        pieHole: 0.4,
                        colors: colors,
                        legend: {
                            position: 'right',
                            alignment: 'center',
                            textStyle: {
                                color: 'black',
                                fontSize: 18
                            },
                            scrollArrows: 'none'
                        },
                        chartArea: {
                            left: 10,
                            top: 30,
                            width: '100%',
                            height: '80%'
                        },
                        height: 600
                    };

                    var chart = new google.visualization.PieChart(document.getElementById('department_chart_div'));
                    chart.draw(data, options);
                })
                .catch(error => {
                    console.error('Error fetching department data:', error);
                });
        }

        window.onload = function () {
            var errorMessage = "@Html.Raw(ViewData["ErrorMessage"])"; 
            if (errorMessage) {
                alert(errorMessage);
            }
        };
      
    </script>
}




